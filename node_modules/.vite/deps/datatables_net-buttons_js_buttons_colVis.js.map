{
  "version": 3,
  "sources": ["../../datatables.net-buttons/js/buttons.colVis.mjs", "dep:datatables_net-buttons_js_buttons_colVis"],
  "sourcesContent": ["/*!\n * Column visibility buttons for Buttons and DataTables.\n * 2016 SpryMedia Ltd - datatables.net/license\n */\n\nimport $ from 'jquery';\nimport DataTable from 'datatables.net';\nimport Buttons from 'datatables.net-buttons';\n\n\n\n$.extend( DataTable.ext.buttons, {\n\t// A collection of column visibility buttons\n\tcolvis: function ( dt, conf ) {\n\t\tvar node = null;\n\t\tvar buttonConf = {\n\t\t\textend: 'collection',\n\t\t\tinit: function ( dt, n ) {\n\t\t\t\tnode = n;\n\t\t\t},\n\t\t\ttext: function ( dt ) {\n\t\t\t\treturn dt.i18n( 'buttons.colvis', 'Column visibility' );\n\t\t\t},\n\t\t\tclassName: 'buttons-colvis',\n\t\t\tcloseButton: false,\n\t\t\tbuttons: [ {\n\t\t\t\textend: 'columnsToggle',\n\t\t\t\tcolumns: conf.columns,\n\t\t\t\tcolumnText: conf.columnText\n\t\t\t} ]\n\t\t};\n\n\t\t// Rebuild the collection with the new column structure if columns are reordered\n\t\tdt.on( 'column-reorder.dt'+conf.namespace, function (e, settings, details) {\n\t\t\t// console.log(node);\n\t\t\t// console.log('node', dt.button(null, node).node());\n\t\t\tdt.button(null, dt.button(null, node).node()).collectionRebuild([{\n\t\t\t\textend: 'columnsToggle',\n\t\t\t\tcolumns: conf.columns,\n\t\t\t\tcolumnText: conf.columnText\n\t\t\t}]);\n\t\t});\n\n\t\treturn buttonConf;\n\t},\n\n\t// Selected columns with individual buttons - toggle column visibility\n\tcolumnsToggle: function ( dt, conf ) {\n\t\tvar columns = dt.columns( conf.columns ).indexes().map( function ( idx ) {\n\t\t\treturn {\n\t\t\t\textend: 'columnToggle',\n\t\t\t\tcolumns: idx,\n\t\t\t\tcolumnText: conf.columnText\n\t\t\t};\n\t\t} ).toArray();\n\n\t\treturn columns;\n\t},\n\n\t// Single button to toggle column visibility\n\tcolumnToggle: function ( dt, conf ) {\n\t\treturn {\n\t\t\textend: 'columnVisibility',\n\t\t\tcolumns: conf.columns,\n\t\t\tcolumnText: conf.columnText\n\t\t};\n\t},\n\n\t// Selected columns with individual buttons - set column visibility\n\tcolumnsVisibility: function ( dt, conf ) {\n\t\tvar columns = dt.columns( conf.columns ).indexes().map( function ( idx ) {\n\t\t\treturn {\n\t\t\t\textend: 'columnVisibility',\n\t\t\t\tcolumns: idx,\n\t\t\t\tvisibility: conf.visibility,\n\t\t\t\tcolumnText: conf.columnText\n\t\t\t};\n\t\t} ).toArray();\n\n\t\treturn columns;\n\t},\n\n\t// Single button to set column visibility\n\tcolumnVisibility: {\n\t\tcolumns: undefined, // column selector\n\t\ttext: function ( dt, button, conf ) {\n\t\t\treturn conf._columnText( dt, conf );\n\t\t},\n\t\tclassName: 'buttons-columnVisibility',\n\t\taction: function ( e, dt, button, conf ) {\n\t\t\tvar col = dt.columns( conf.columns );\n\t\t\tvar curr = col.visible();\n\n\t\t\tcol.visible( conf.visibility !== undefined ?\n\t\t\t\tconf.visibility :\n\t\t\t\t! (curr.length ? curr[0] : false )\n\t\t\t);\n\t\t},\n\t\tinit: function ( dt, button, conf ) {\n\t\t\tvar that = this;\n\t\t\tbutton.attr( 'data-cv-idx', conf.columns );\n\n\t\t\tdt\n\t\t\t\t.on( 'column-visibility.dt'+conf.namespace, function (e, settings) {\n\t\t\t\t\tif ( ! settings.bDestroying && settings.nTable == dt.settings()[0].nTable ) {\n\t\t\t\t\t\tthat.active( dt.column( conf.columns ).visible() );\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t.on( 'column-reorder.dt'+conf.namespace, function (e, settings, details) {\n\t\t\t\t\t// Button has been removed from the DOM\n\t\t\t\t\tif ( conf.destroying ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dt.columns( conf.columns ).count() !== 1 ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// This button controls the same column index but the text for the column has\n\t\t\t\t\t// changed\n\t\t\t\t\tthat.text( conf._columnText( dt, conf ) );\n\n\t\t\t\t\t// Since its a different column, we need to check its visibility\n\t\t\t\t\tthat.active( dt.column( conf.columns ).visible() );\n\t\t\t\t} );\n\n\t\t\tthis.active( dt.column( conf.columns ).visible() );\n\t\t},\n\t\tdestroy: function ( dt, button, conf ) {\n\t\t\tdt\n\t\t\t\t.off( 'column-visibility.dt'+conf.namespace )\n\t\t\t\t.off( 'column-reorder.dt'+conf.namespace );\n\t\t},\n\n\t\t_columnText: function ( dt, conf ) {\n\t\t\t// Use DataTables' internal data structure until this is presented\n\t\t\t// is a public API. The other option is to use\n\t\t\t// `$( column(col).node() ).text()` but the node might not have been\n\t\t\t// populated when Buttons is constructed.\n\t\t\tvar idx = dt.column( conf.columns ).index();\n\t\t\tvar title = dt.settings()[0].aoColumns[ idx ].sTitle;\n\n\t\t\tif (! title) {\n\t\t\t\ttitle = dt.column(idx).header().innerHTML;\n\t\t\t}\n\n\t\t\ttitle = title\n\t\t\t\t.replace(/\\n/g,\" \")        // remove new lines\n\t\t\t\t.replace(/<br\\s*\\/?>/gi, \" \")  // replace line breaks with spaces\n\t\t\t\t.replace(/<select(.*?)<\\/select>/g, \"\") // remove select tags, including options text\n\t\t\t\t.replace(/<!\\-\\-.*?\\-\\->/g, \"\") // strip HTML comments\n\t\t\t\t.replace(/<.*?>/g, \"\")   // strip HTML\n\t\t\t\t.replace(/^\\s+|\\s+$/g,\"\"); // trim\n\n\t\t\treturn conf.columnText ?\n\t\t\t\tconf.columnText( dt, idx, title ) :\n\t\t\t\ttitle;\n\t\t}\n\t},\n\n\n\tcolvisRestore: {\n\t\tclassName: 'buttons-colvisRestore',\n\n\t\ttext: function ( dt ) {\n\t\t\treturn dt.i18n( 'buttons.colvisRestore', 'Restore visibility' );\n\t\t},\n\n\t\tinit: function ( dt, button, conf ) {\n\t\t\tconf._visOriginal = dt.columns().indexes().map( function ( idx ) {\n\t\t\t\treturn dt.column( idx ).visible();\n\t\t\t} ).toArray();\n\t\t},\n\n\t\taction: function ( e, dt, button, conf ) {\n\t\t\tdt.columns().every( function ( i ) {\n\t\t\t\t// Take into account that ColReorder might have disrupted our\n\t\t\t\t// indexes\n\t\t\t\tvar idx = dt.colReorder && dt.colReorder.transpose ?\n\t\t\t\t\tdt.colReorder.transpose( i, 'toOriginal' ) :\n\t\t\t\t\ti;\n\n\t\t\t\tthis.visible( conf._visOriginal[ idx ] );\n\t\t\t} );\n\t\t}\n\t},\n\n\n\tcolvisGroup: {\n\t\tclassName: 'buttons-colvisGroup',\n\n\t\taction: function ( e, dt, button, conf ) {\n\t\t\tdt.columns( conf.show ).visible( true, false );\n\t\t\tdt.columns( conf.hide ).visible( false, false );\n\n\t\t\tdt.columns.adjust();\n\t\t},\n\n\t\tshow: [],\n\n\t\thide: []\n\t}\n} );\n\n\nexport default DataTable;\n", "import d from \"./node_modules/datatables.net-buttons/js/buttons.colVis.mjs\";export default d;"],
  "mappings": "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",
  "names": ["$", "dt"]
}
