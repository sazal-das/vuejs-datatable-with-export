import {
  createBaseVNode,
  defineComponent,
  normalizeClass,
  renderSlot,
  setBlockTracking
} from "./chunk-DPG7LVJ7.js";
import "./chunk-S5KM4IGW.js";

// node_modules/datatables.net-vue3/dist/datatables.net-vue.esm.js
var DataTablesLib;
var Comp = defineComponent({
  name: "DataTable",
  expose: ["dt"],
  data() {
    return {
      _dt: null,
      oldData: []
    };
  },
  computed: {},
  methods: {
    dt() {
      return this._dt;
    },
    saveOld(d) {
      this.oldData = d.value ? d.value.slice() : d.slice();
    }
  },
  mounted() {
    let table = this.$el.querySelector("table");
    let options = this.options;
    if (this.data) {
      options.data = this.data;
      this.saveOld(options.data);
    }
    if (this.columns) {
      options.columns = this.columns;
    }
    if (this.ajax) {
      options.ajax = this.ajax;
    }
    if (!DataTablesLib) {
      throw new Error("DataTables library not set. See https://datatables.net/tn/19 for details.");
    }
    this._dt = new DataTablesLib(table, options);
  },
  beforeUnmount() {
    this._dt.destroy(true);
  },
  props: {
    ajax: null,
    class: {
      type: String,
      default: ""
    },
    columns: {
      type: Array,
      default: null
    },
    data: {
      type: Array,
      default: null
    },
    options: {
      default: {}
    }
  },
  watch: {
    data: {
      handler(newVal) {
        let known = this._dt.data().toArray();
        for (let n of newVal) {
          if (!known.includes(n)) {
            this._dt.row.add(n);
          }
        }
        for (let k of known) {
          if (!newVal.includes(k)) {
            this._dt.row((_idx, d) => d === k).remove();
          }
        }
        this._dt.rows().invalidate().draw(false);
        this.saveOld(newVal);
      },
      deep: true
    }
  }
});
Comp.use = function(lib) {
  DataTablesLib = lib;
};
var script = Comp;
function render(_ctx, _cache, $props, $setup, $data, $options) {
  return _cache[0] || (setBlockTracking(-1), _cache[0] = createBaseVNode("div", {
    class: "datatable"
  }, [createBaseVNode("table", {
    class: normalizeClass(_ctx.class)
  }, [renderSlot(_ctx.$slots, "default")], 2)]), setBlockTracking(1), _cache[0]);
}
script.render = render;
var entry_esm = (() => {
  const installable = script;
  installable.install = (app) => {
    app.component("Datatables.netVue", installable);
  };
  return installable;
})();

// dep:datatables_net-vue3
var datatables_net_vue3_default = entry_esm;
export {
  datatables_net_vue3_default as default
};
//# sourceMappingURL=datatables_net-vue3.js.map
