export interface IData {
    _dt: null | any;
    oldData: Array<any>;
}
declare const Comp: import("vue").DefineComponent<{
    ajax: null;
    class: {
        type: StringConstructor;
        default: string;
    };
    columns: {
        type: ArrayConstructor;
        default: null;
    };
    data: {
        type: ArrayConstructor;
        default: null;
    };
    options: {
        default: {};
    };
}, unknown, IData, {}, {
    dt(): any;
    saveOld(d: any): void;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    ajax: null;
    class: {
        type: StringConstructor;
        default: string;
    };
    columns: {
        type: ArrayConstructor;
        default: null;
    };
    data: {
        type: ArrayConstructor;
        default: null;
    };
    options: {
        default: {};
    };
}>>, {
    data: unknown[];
    class: string;
    columns: unknown[];
    options: {};
}>;
export default Comp;
